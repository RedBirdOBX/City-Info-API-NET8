<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CityInfoAPI.Web</name>
    </assembly>
    <members>
        <member name="M:CityInfoAPI.Web.Controllers.AuthenticationController.Authenticate(CityInfoAPI.Web.Controllers.RequestHelpers.AuthenticationUserRequest)">
             <summary>
            
             </summary>
             <param name="user"></param>
             <returns></returns>
        </member>
        <member name="M:CityInfoAPI.Web.Controllers.AuthenticationController.ValidateUserCredentials(System.String,System.String)">
            <summary>
            This typically might include a call to a database or a service to
            validate the user credentials.
            </summary>
            <param name="username"></param>
            <param name="password"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:CityInfoAPI.Web.Controllers.FilesController.#ctor(Microsoft.AspNetCore.StaticFiles.FileExtensionContentTypeProvider,Microsoft.Extensions.Logging.ILogger{CityInfoAPI.Web.Controllers.FilesController})">
            <summary>constructor</summary>
            <param name="fileExtensionContentTypeProvider"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CityInfoAPI.Web.Controllers.FilesController.GetFile(System.String)">
            <summary>retrieves file by id</summary>
            <param name="fileId"></param>
            <returns>file found by id</returns>
            <example>{baseUrl}/api/files/{fileId}</example>
        </member>
        <member name="M:CityInfoAPI.Web.Controllers.FilesController.CreateFile(Microsoft.AspNetCore.Http.IFormFile)">
            <summary>create a pdf file</summary>
            <param name="file"></param>
            <returns>OK - 200</returns>
            <example>{baseUrl}/api/files</example>
        </member>
        <member name="M:CityInfoAPI.Controllers.CitiesController.#ctor(Microsoft.Extensions.Logging.ILogger{CityInfoAPI.Controllers.CitiesController},CityInfoAPI.Data.CityInfoMemoryDataStore,CityInfoAPI.Data.Repositories.ICityInfoRepository,AutoMapper.IMapper)">
            <summary>
            Constructor
            </summary>
            <param name="logger"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CityInfoAPI.Controllers.CitiesController.GetCities(System.Nullable{System.Boolean},System.String,System.String,System.Int32,System.Int32)">
            <summary>Gets all Cities</summary>
            <returns>collection of CityDto</returns>
            <param name="includePointsOfInterest"></param>
            <param name="name"></param>
            <param name="search"></param>
            <example>{baseUrl}/api/cities</example>
        </member>
        <member name="M:CityInfoAPI.Controllers.CitiesController.GetCityByCityId(System.Guid,System.Boolean)">
            <summary>Gets a City by Id</summary>
            <param name="cityGuid"></param>
            <param name="includePointsOfInterest"></param>
            <returns>CityDto</returns>
            <example>{baseUrl}/api/cities/{cityGuid}?includePointsOfInterest={bool}</example>
        </member>
        <member name="M:CityInfoAPI.Controllers.CitiesController.CreateCity(CityInfoAPI.Dtos.Models.CityCreateDto)">
            <summary>creates a City</summary>
            <param name="request"></param>
            <returns>CityDto at details route</returns>
            <example>{baseUrl}/api/cities</example>
        </member>
        <member name="M:CityInfoAPI.Controllers.CitiesController.UpdateCity(System.Guid,CityInfoAPI.Dtos.Models.CityUpdateDto)">
            <summary>updates city through PUT</summary>
            <param name="request"></param>
            <returns>No Content</returns>
            <example>{baseUrl}/api/cities/{cityGuid}</example>
        </member>
        <member name="M:CityInfoAPI.Controllers.CitiesController.PatchCity(System.Guid,Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{CityInfoAPI.Dtos.Models.CityUpdateDto})">
            <summary>patches city object</summary>
            <param name="cityGuid"></param>
            <param name="patchDocument"></param>
            <returns>No Content</returns>
            <example>{baseUrl}/api/cities/{cityGuid}</example>
        </member>
        <member name="M:CityInfoAPI.Controllers.CitiesController.DeleteCity(System.Guid)">
            <summary>deletes city object</summary>
            <param name="cityGuid"></param>
            <returns>no content</returns>
            <example>{baseUrl}/api/cities/{cityGuid}</example>
        </member>
        <member name="M:CityInfoAPI.Controllers.PointsOfInterestController.#ctor(CityInfoAPI.Data.CityInfoMemoryDataStore,CityInfoAPI.Data.Repositories.ICityInfoRepository,Microsoft.Extensions.Logging.ILogger{CityInfoAPI.Controllers.PointsOfInterestController},CityInfoAPI.Web.Services.IMailService,AutoMapper.IMapper)">
            <summary>constructor</summary>
            <param name="logger"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CityInfoAPI.Controllers.PointsOfInterestController.GetPointsOfInterest(System.String,System.String)">
            <summary>Gets all Points of Interest</summary>
            <returns>collection of points of interest</returns>
            <example>{baseUrl}/api/pointsofinterest</example>
        </member>
        <member name="M:CityInfoAPI.Controllers.PointsOfInterestController.GetPointsOfInterestForCity(System.Guid)">
            <summary>Gets all Points of Interest for City</summary>
            <returns>collection of points of interest</returns>
            <param name="cityGuid"></param>
            <example>{baseUrl}/api/cities/{cityGuid}/pointsofinterest</example>
        </member>
        <member name="M:CityInfoAPI.Controllers.PointsOfInterestController.GetPointOfInterestById(System.Guid,System.Guid)">
            <summary>gets point of interest by id</summary>
            <param name="cityGuid"></param>
            <param name="pointGuid"></param>
            <returns>point of interest</returns>
            <example>{baseUrl}/api/cities/{cityGuid}/pointsofinterest/{pointGuid}</example>
        </member>
        <member name="M:CityInfoAPI.Controllers.PointsOfInterestController.CreatePointOfInterest(System.Guid,CityInfoAPI.Dtos.Models.PointOfInterestCreateDto)">
            <summary>creates a point of interest</summary>
            <param name="cityGuid"></param>
            <param name="createPointOfInterest"></param>
            <returns>new point of interest at route</returns>
            <example>{baseUrl}/api/cities/{cityGuid}/pointsofinterest</example>
        </member>
        <member name="M:CityInfoAPI.Controllers.PointsOfInterestController.UpdatePointOfInterest(System.Guid,System.Guid,CityInfoAPI.Dtos.Models.PointOfInterestUpdateDto)">
            <summary>updates point of interest through PUT</summary>
            <param name="cityGuid"></param>
            <param name="pointGuid"></param>
            <param name="updatePointOfInterest"></param>
            <returns></returns>
            <example>{baseUrl}/api/cities/{cityGuid}/pointsofinterest/{pointGuid}</example>
        </member>
        <member name="M:CityInfoAPI.Controllers.PointsOfInterestController.PatchPointOfInterest(System.Guid,System.Guid,Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{CityInfoAPI.Dtos.Models.PointOfInterestUpdateDto})">
            <summary>patches point of interest</summary>
            <param name="cityGuid"></param>
            <param name="pointGuid"></param>
            <param name="patchDocument"></param>
            <returns></returns>
            <example>{baseUrl}/api/cities/{cityGuid}/pointsofinterest/{pointGuid}</example>
        </member>
        <member name="M:CityInfoAPI.Controllers.PointsOfInterestController.DeletePointOfInterest(System.Guid,System.Guid)">
            <summary>deletes point of interest</summary>
            <param name="cityGuid"></param>
            <param name="pointGuid"></param>
            <returns></returns>
            <example>{baseUrl}/api/cities/{cityGuid}/pointsofinterest/{pointGuid}</example>
        </member>
    </members>
</doc>

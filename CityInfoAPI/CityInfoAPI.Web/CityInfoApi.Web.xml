<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CityInfoAPI.Web</name>
    </assembly>
    <members>
        <member name="T:CityInfoAPI.Web.Controllers.AuthenticationController">
            <summary>
            authentication controller
            </summary>
            <response code="500">internal error</response>
        </member>
        <member name="M:CityInfoAPI.Web.Controllers.AuthenticationController.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            constructor
            </summary>
            <param name="configuration"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CityInfoAPI.Web.Controllers.AuthenticationController.Authenticate(CityInfoAPI.Web.Controllers.RequestHelpers.Models.AuthenticationUserRequest)">
            <summary>
            provides user token
            </summary>
            <param name="userRequest"></param>
            <returns>token</returns>
            <response code="200">returns token</response>
            <response code="401">unauthorized</response>
        </member>
        <member name="M:CityInfoAPI.Web.Controllers.AuthenticationController.ValidateUserCredentials(System.String,System.String)">
            <summary>
            This typically might include a call to a database or a service to
            validate the user credentials.
            </summary>
            <param name="username"></param>
            <param name="password"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:CityInfoAPI.Web.Controllers.FilesController">
            <summary>
            files controller
            </summary>
            <response code="401">unauthorized request</response>
            <response code="500">internal error</response>
        </member>
        <member name="M:CityInfoAPI.Web.Controllers.FilesController.#ctor(Microsoft.AspNetCore.StaticFiles.FileExtensionContentTypeProvider,Microsoft.Extensions.Logging.ILogger{CityInfoAPI.Web.Controllers.FilesController})">
            <summary>constructor</summary>
            <param name="fileExtensionContentTypeProvider"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CityInfoAPI.Web.Controllers.FilesController.GetFile(System.String)">
            <summary>retrieves file by id</summary>
            <param name="fileId"></param>
            <returns>file found by id</returns>
            <example>{baseUrl}/api/files/{fileId}</example>
            <response code="200">returns file</response>
            <response code="404">file not found</response>
        </member>
        <member name="M:CityInfoAPI.Web.Controllers.FilesController.CreateFile(Microsoft.AspNetCore.Http.IFormFile)">
            <summary>create a pdf file</summary>
            <param name="file"></param>
            <returns>OK - 200</returns>
            <example>{baseUrl}/api/files</example>
            <response code="200">file created</response>
            <response code="400">bad request for file upload</response>
        </member>
        <member name="T:CityInfoAPI.Web.Controllers.RequestHelpers.Models.AuthenticationUserRequest">
            <summary>
            obj for mapping a user requesting to get token
            </summary>
        </member>
        <member name="P:CityInfoAPI.Web.Controllers.RequestHelpers.Models.AuthenticationUserRequest.UserName">
            <summary>
            username
            </summary>
        </member>
        <member name="P:CityInfoAPI.Web.Controllers.RequestHelpers.Models.AuthenticationUserRequest.Password">
            <summary>
            password
            </summary>
        </member>
        <member name="T:CityInfoAPI.Web.Controllers.RequestHelpers.Models.CityInfoUser">
            <summary>
            approved user of api w/ token.  details below create token.
            </summary>
        </member>
        <member name="P:CityInfoAPI.Web.Controllers.RequestHelpers.Models.CityInfoUser.UserId">
            <summary>
            user id
            </summary>
        </member>
        <member name="P:CityInfoAPI.Web.Controllers.RequestHelpers.Models.CityInfoUser.UserName">
            <summary>
            username
            </summary>
        </member>
        <member name="P:CityInfoAPI.Web.Controllers.RequestHelpers.Models.CityInfoUser.FirstName">
            <summary>
            first name
            </summary>
        </member>
        <member name="P:CityInfoAPI.Web.Controllers.RequestHelpers.Models.CityInfoUser.LastName">
            <summary>
            last name
            </summary>
        </member>
        <member name="P:CityInfoAPI.Web.Controllers.RequestHelpers.Models.CityInfoUser.City">
            <summary>
            city
            </summary>
        </member>
        <member name="M:CityInfoAPI.Web.Controllers.RequestHelpers.Models.CityInfoUser.#ctor(System.Int32,System.String,System.String,System.String,System.String)">
            <summary>
            constructor
            </summary>
            <param name="userId"></param>
            <param name="userName"></param>
            <param name="firstName"></param>
            <param name="lastName"></param>
            <param name="city"></param>
        </member>
        <member name="T:CityInfoAPI.Web.Controllers.RequestHelpers.Models.CityRequestParameters">
            <summary>
            obj used to filer / search / page results of cities
            </summary>
        </member>
        <member name="P:CityInfoAPI.Web.Controllers.RequestHelpers.Models.CityRequestParameters.IncludePointsOfInterest">
            <summary>
            flag to include points of interest in results
            </summary>
        </member>
        <member name="P:CityInfoAPI.Web.Controllers.RequestHelpers.Models.CityRequestParameters.Name">
            <summary>
            name filter
            </summary>
        </member>
        <member name="P:CityInfoAPI.Web.Controllers.RequestHelpers.Models.CityRequestParameters.Search">
            <summary>
            search string
            </summary>
        </member>
        <member name="P:CityInfoAPI.Web.Controllers.RequestHelpers.Models.CityRequestParameters.PageNumber">
            <summary>
            requested page number
            </summary>
        </member>
        <member name="P:CityInfoAPI.Web.Controllers.RequestHelpers.Models.CityRequestParameters.PageSize">
            <summary>
            requested page size
            </summary>
        </member>
        <member name="T:CityInfoAPI.Web.Controllers.ResponseHelpers.PaginationMetaData">
            <summary>
            obj used to provide metadata in response header
            </summary>
        </member>
        <member name="P:CityInfoAPI.Web.Controllers.ResponseHelpers.PaginationMetaData.TotalItemCount">
            <summary>
            total items in the collection
            </summary>
        </member>
        <member name="P:CityInfoAPI.Web.Controllers.ResponseHelpers.PaginationMetaData.TotalPageCount">
            <summary>
            total page count
            </summary>
        </member>
        <member name="P:CityInfoAPI.Web.Controllers.ResponseHelpers.PaginationMetaData.PageSize">
            <summary>
            page size
            </summary>
        </member>
        <member name="P:CityInfoAPI.Web.Controllers.ResponseHelpers.PaginationMetaData.CurrentPage">
            <summary>
            current page number
            </summary>
        </member>
        <member name="M:CityInfoAPI.Web.Controllers.ResponseHelpers.PaginationMetaData.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            constructor
            </summary>
            <param name="totalItemCount"></param>
            <param name="pageSize"></param>
            <param name="currentPage"></param>
        </member>
        <member name="T:CityInfoAPI.Web.Controllers.ResponseHelpers.UriLinkHelper">
            <summary>
            Used for building links in GET responses.
            </summary>
        </member>
        <member name="T:CityInfoAPI.Controllers.CitiesController">
            <summary>
            Cities controller
            </summary>
            <response code="401">unauthorized request</response>
            <response code="500">internal error</response>
        </member>
        <member name="M:CityInfoAPI.Controllers.CitiesController.#ctor(Microsoft.Extensions.Logging.ILogger{CityInfoAPI.Controllers.CitiesController},AutoMapper.IMapper,CityInfoAPI.Service.ICityService,CityInfoAPI.Service.IPointsOfInterestService,Microsoft.Extensions.Configuration.IConfiguration,Microsoft.AspNetCore.Http.IHttpContextAccessor,Microsoft.AspNetCore.Routing.LinkGenerator)">
            <summary>
            Constructor
            </summary>
            <param name="logger"></param>
            <param name="mapper"></param>
            <param name="service"></param>
            <param name="pointsService"></param>
            <param name="configuration"></param>
            <param name="httpContextAccessor"></param>
            <param name="linkGenerator"></param>
        </member>
        <member name="M:CityInfoAPI.Controllers.CitiesController.GetCities(CityInfoAPI.Web.Controllers.RequestHelpers.Models.CityRequestParameters)">
            <summary>Gets all Cities</summary>
            <returns>collection of CityDto</returns>
            <example>{baseUrl}/api/cities</example>
            <response code="200">returns city by id</response>
        </member>
        <member name="M:CityInfoAPI.Controllers.CitiesController.GetCityByCityId(System.Guid,System.Boolean)">
            <summary>returns city by id</summary>
            <param name="cityGuid"></param>
            <param name="includePointsOfInterest"></param>
            <returns>CityDto</returns>
            <example>{baseUrl}/api/cities/{cityGuid}?includePointsOfInterest={bool}</example>
            <response code="200">returns city by id</response>
            <response code="400">bad request for getting city by id</response>
        </member>
        <member name="M:CityInfoAPI.Controllers.CitiesController.CreateCity(CityInfoAPI.Dtos.Models.CityCreateDto)">
            <summary>creates a City</summary>
            <param name="request"></param>
            <returns>CityDto at details route</returns>
            <example>{baseUrl}/api/cities</example>
            <response code="201">city created</response>
            <response code="409">conflict of data - city already exists</response>
        </member>
        <member name="M:CityInfoAPI.Controllers.CitiesController.BlockPostToExistingCity(System.Guid)">
            <summary>
            prevents posts to existing cities
            </summary>
            <param name="cityGuid"></param>
        </member>
        <member name="M:CityInfoAPI.Controllers.CitiesController.UpdateCity(System.Guid,CityInfoAPI.Dtos.Models.CityUpdateDto)">
            <summary>updates city through PUT</summary>
            <param name="cityGuid"></param>
            <param name="request"></param>
            <returns>No Content</returns>
            <example>{baseUrl}/api/cities/{cityGuid}</example>
            <response code="204">city updated</response>
            <response code="404">city not found</response>
        </member>
        <member name="M:CityInfoAPI.Controllers.CitiesController.PatchCity(System.Guid,Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{CityInfoAPI.Dtos.Models.CityUpdateDto})">
            <summary>patches city object</summary>
            <param name="cityGuid"></param>
            <param name="patchDocument"></param>
            <returns>No Content</returns>
            <example>{baseUrl}/api/cities/{cityGuid}</example>
            <response code="204">city updated</response>
            <response code="400">city has bad data</response>
            <response code="404">city not found</response>
        </member>
        <member name="M:CityInfoAPI.Controllers.CitiesController.DeleteCity(System.Guid)">
            <summary>deletes city object</summary>
            <param name="cityGuid"></param>
            <returns>no content</returns>
            <example>{baseUrl}/api/cities/{cityGuid}</example>
            <response code="204">city deleted</response>
            <response code="404">city not found</response>
        </member>
        <member name="T:CityInfoAPI.Controllers.PointsOfInterestController">
            <summary>
            points of interest controller
            </summary>
            <response code="401">unauthorized request</response>
            <response code="500">internal error</response>
        </member>
        <member name="M:CityInfoAPI.Controllers.PointsOfInterestController.#ctor(Microsoft.Extensions.Logging.ILogger{CityInfoAPI.Controllers.PointsOfInterestController},CityInfoAPI.Service.IMailService,AutoMapper.IMapper,CityInfoAPI.Service.IPointsOfInterestService,CityInfoAPI.Service.ICityService,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>constructor</summary>
            <param name="logger"></param>
            <param name="mailService"></param>
            <param name="service"></param>
            <param name="cityService"></param>
            <param name="mapper"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CityInfoAPI.Controllers.PointsOfInterestController.GetPointsOfInterest(System.String,System.String)">
            <summary>Gets all Points of Interest</summary>
            <returns>collection of points of interest</returns>
            <example>{baseUrl}/api/pointsofinterest</example>
            <response code="200">returns points of interest for city</response>
        </member>
        <member name="M:CityInfoAPI.Controllers.PointsOfInterestController.GetPointsOfInterestForCity(System.Guid)">
            <summary>Gets all Points of Interest for City</summary>
            <returns>collection of points of interest</returns>
            <param name="cityGuid"></param>
            <example>{baseUrl}/api/cities/{cityGuid}/pointsofinterest</example>
            <response code="200">returns points of interest for city</response>
            <response code="404">city not found</response>
        </member>
        <member name="M:CityInfoAPI.Controllers.PointsOfInterestController.GetPointOfInterestById(System.Guid,System.Guid)">
            <summary>gets point of interest by id</summary>
            <param name="cityGuid"></param>
            <param name="pointGuid"></param>
            <returns>point of interest</returns>
            <example>{baseUrl}/api/cities/{cityGuid}/pointsofinterest/{pointGuid}</example>
            <response code="200">returns point of interest by id for city</response>
            <response code="404">city or point of interest not found</response>
        </member>
        <member name="M:CityInfoAPI.Controllers.PointsOfInterestController.CreatePointOfInterest(System.Guid,CityInfoAPI.Dtos.Models.PointOfInterestCreateDto)">
            <summary>creates a point of interest</summary>
            <param name="cityGuid"></param>
            <param name="request"></param>
            <returns>new point of interest at route</returns>
            <example>{baseUrl}/api/cities/{cityGuid}/pointsofinterest</example>
            <response code="201">returns created at route for new point of interest</response>
            <response code="404">city not found</response>
        </member>
        <member name="M:CityInfoAPI.Controllers.PointsOfInterestController.BlockPostToExistingPointOfInterest(System.Guid,System.Guid)">
            <summary>
            user should not be able to POST to an existing point of interest.
            </summary>
            <param name="cityGuid"></param>
            <param name="pointGuid"></param>
        </member>
        <member name="M:CityInfoAPI.Controllers.PointsOfInterestController.UpdatePointOfInterest(System.Guid,System.Guid,CityInfoAPI.Dtos.Models.PointOfInterestUpdateDto)">
            <summary>updates point of interest through PUT</summary>
            <param name="cityGuid"></param>
            <param name="pointGuid"></param>
            <param name="updatePointOfInterest"></param>
            <returns>No Content</returns>
            <example>{baseUrl}/api/cities/{cityGuid}/pointsofinterest/{pointGuid}</example>
            <response code="204">updated point of interest</response>
            <response code="404">city or point of interest not found</response>
        </member>
        <member name="M:CityInfoAPI.Controllers.PointsOfInterestController.PatchPointOfInterest(System.Guid,System.Guid,Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{CityInfoAPI.Dtos.Models.PointOfInterestUpdateDto})">
            <summary>patches point of interest</summary>
            <param name="cityGuid"></param>
            <param name="pointGuid"></param>
            <param name="patchDocument"></param>
            <returns>No Content</returns>
            <example>{baseUrl}/api/cities/{cityGuid}/pointsofinterest/{pointGuid}</example>
            <response code="204">updated point of interest</response>
            <response code="404">city or point of interest not found</response>
        </member>
        <member name="M:CityInfoAPI.Controllers.PointsOfInterestController.DeletePointOfInterest(System.Guid,System.Guid)">
            <summary>deletes point of interest</summary>
            <param name="cityGuid"></param>
            <param name="pointGuid"></param>
            <returns>No Content</returns>
            <example>{baseUrl}/api/cities/{cityGuid}/pointsofinterest/{pointGuid}</example>
            <response code="204">deleted point of interest</response>
            <response code="404">city or point of interest not found</response>
        </member>
    </members>
</doc>
